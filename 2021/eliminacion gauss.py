# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/113QtH4VHLepJCe3bJbAoqR-_itxST4nW
"""

# Resolviendo Equaciones lineales - Eliminacion gaussiana
# Ax(incognitas) = B

# matriz aumentada
A = [ [-3,2,-1,1],[6,-6,7,-7],[3,-4,4,-6]]

# mostrar la matriz como una... matriz jaja
for i in range(len(A)):
  print(A[i])


print("_____________________________________________________________")
def columna(matrix, j):
    return [row[j] for row in matrix]
#def columna(matrix, j):
#    col = []
#    for i in matrix:
#      col.append(matrix[j])
    



def convertColumnInZero():
  col = columna(A,j)  # tomar la columna a la cual se asocia el pivote
  for i in range(len(col)- 1):
    valor = ((pivot/pivot) - ())
  

  

for i in range(len(A)):
  for j in range(len(A[i])):
    #print(i,j)
    if i == j :
      #print(A[i][j]) # objetivo : recorrer las diagonales como pivotes
      pivot = A[i][j]
      convertColumnInZero()